---
const categories = [
  'TODOS',
  'ENTRADAS',
  'DEL MAR',
  'OSTIONES',
  'ALMEJAS',
  'TACOS Y TOSTADAS',
  'PIZZAS',
  'PASTAS',
  'ENSALADAS',
  'CORTES',
  'GUARNICIONES',
  'MENÃš KIDS'
];
const defaultCategory = 'ENTRADAS';
---

<div class="filter-container">
  <div id="filter-options" class="filter-options">
    {categories.map((category) => (
       <button 
        class={`filter-button ${category === defaultCategory ? 'active' : ''}`}
        data-category={category === 'TODOS' ? '*' : category.toLowerCase().replace(/\s+/g, '-')}
        data-name={category}
        data-default={category === defaultCategory ? 'true' : 'false'}
      >
        {category}
      </button>
    ))}
  </div>
</div>

<script>
 function initFilters() {
    const filterButtons = document.querySelectorAll('.filter-button');
    const filterOptions = document.getElementById('filter-options');
    
    if (!filterOptions) return;
    
    // Filter functionality
    filterButtons.forEach(button => {
      button.addEventListener('click', async () => {
        // Remove active class from all buttons
        console.log('click')
        filterButtons.forEach(btn => btn.classList.remove('active'));
        
        // Add active class to clicked button
        button.classList.add('active');
        
        // Get selected category
        const category = button.getAttribute('data-category') || '*';
        
        // Dispatch custom event for menu sections to listen to
        window.dispatchEvent(new CustomEvent('categoryChanged', {
          detail: {
            category: category
          }
        }));
        
        // Smooth scroll to top
        // window.scrollTo({ top: 0, behavior: 'smooth' });
      });
    });
    
    // Initialize with default category
    // const defaultButton = document.querySelector('.filter-button[data-default="true"]');
    // if (defaultButton) {
    //   defaultButton.click();
    // }
  }

  // Run on different events
  document.addEventListener('DOMContentLoaded', initFilters);
  
  // Support for Astro navigation
  document.addEventListener('astro:page-load', initFilters);
</script>

<style>
  .filter-container {
    position: sticky;
    top: 12px;
    background-color: var(--color-primary);
    padding: 1rem;
    z-index: 1;
    margin-bottom: 2rem;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.066);
    display: flex;
    flex-direction: column;
    gap: 1rem;
    border-radius: 12px;
  }
  
  .filter-options {
    display: flex;
    gap: 0.5rem;
    padding: 0 1rem;
    overflow-x: auto;
  }
  
  .filter-options::-webkit-scrollbar {
    display: none;
    -ms-overflow-style: none;
    scrollbar-width: none;
  }
  
  .filter-button {
    background-color: transparent;
    border: 2px solid var(--color-accent);
    color: var(--color-accent);
    padding: 0.5rem 1rem;
    border-radius: 25px;
    font-size: 0.9rem;
    cursor: pointer;
    transition: background-color 0.3s ease, color 0.3s ease;
    text-transform: uppercase;
    font-weight: 600;
    height: fit-content;
    text-wrap: nowrap;
  }
  
  .filter-button:hover, .filter-button.active {
    background-color: var(--color-accent);
    color: var(--color-primary);
  }
  
  /* Responsive styles */
  @media (min-width: 768px) {
    .filter-options {
      flex-wrap: wrap;
      justify-content: center;
    }
  }
  
  @media (max-width: 768px) {
    .filter-options {
      mask-image: linear-gradient(to right, black 85%, transparent);
      -webkit-mask-image: linear-gradient(to right, black 85%, transparent);
      mask-repeat: no-repeat;
      mask-size: 100%;
      -webkit-mask-repeat: no-repeat;
      -webkit-mask-size: 100%;
    }
  }
</style>